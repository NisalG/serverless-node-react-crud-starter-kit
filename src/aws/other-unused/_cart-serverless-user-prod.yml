AWSTemplateFormatVersion: 2010-09-09
Description: Creates an S3 bucket for hosting a Static HTML/CSS website
Parameters:
  Environment:
    Description: Deploying environment
    Type: String
    AllowedValues:
      - dev
      - qa
      - stg
      - prod
    Default: dev
  CreatedBy:
    Description: Who is creating the cloudformation stack
    Type: String
    Default: CodePipeline  
  Serial:
    Type: Number
    Description: Increment this to rotate credentials
    Default: 0
Resources:
  ServerlessIAMUser:
    Type: AWS::IAM::User
    Properties:
      UserName: !Join ['-', ["cart-serverless-user", !Ref Environment]]
      Policies:
      - PolicyName: !Join ['-', ["cart-serverless-policy", !Ref Environment]]
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - 'cognito-identity:GetOpenIdTokenForDeveloperIdentity'
            Resource: '*'
      Tags:
        - Key: env
          Value: !Join ['-', ["cart", !Ref Environment]]
        - Key: createdBy
          Value: !Ref CreatedBy
        - Key: application
          Value: cart-api
  AccessKey:
    Type: AWS::IAM::AccessKey
    Properties: 
      Serial: !Ref Serial
      Status: Active
      UserName: !Ref ServerlessIAMUser
  AccessKeySecret:
    Type: AWS::SecretsManager::Secret
    Properties: 
      Description: !Sub "These are the credentials for the IAM User ${ServerlessIAMUser}"
      SecretString: !Join
        - ""
        - - '{"AccessKeyId":"'
          - !Ref AccessKey
          - '","SecretAccessKey":"'
          - !GetAtt AccessKey.SecretAccessKey
          - '"}'
Outputs:
  AcceessKeyIdExport:
    Description: 'Access Key'
    Value: !Ref AccessKey
    Export:
       Name: !Join ['-', ["ServelessUserAcceessId", !Ref Environment]]
  AcceessKeyExport:
    Description: 'Access Key'
    Value: !GetAtt AccessKey.SecretAccessKey
    Export:
       Name: !Join ['-', ["ServelessUserAcceessKey", !Ref Environment]]